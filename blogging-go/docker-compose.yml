version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: blog_sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrongPassword123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - blog_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'YourStrongPassword123!' -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Go API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog_api
    environment:
      - PORT=8080
      - DB_HOST=sqlserver
      - DB_PORT=1433
      - DB_USER=sa
      - DB_PASSWORD=YourStrongPassword123!
      - DB_NAME=BlogDB
      - JWT_SECRET=your_jwt_secret_key_here_make_it_long_and_secure
    ports:
      - "8080:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - blog_network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: blog_redis
    ports:
      - "6379:6379"
    networks:
      - blog_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  sqlserver_data:
  redis_data:

networks:
  blog_network:
    driver: bridge